"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[101],{74559:e=>{e.exports=JSON.parse('{"functions":[{"name":"switch","desc":"","params":[{"name":"value","desc":"","lua_type":"any"},{"name":"shouldYield","desc":"","lua_type":"bool"},{"name":"...","desc":"","lua_type":"any"}],"returns":[{"desc":"","lua_type":"Observable"}],"function_type":"static","source":{"line":72,"path":"src/switch/src/Shared/switch.lua"}}],"properties":[],"types":[],"name":"switch","desc":"Custom switch implementation for Roblox\\n\\nExample usage:\\n\\n```lua\\nswitch(2)({\\n\\tcase(1, function(value)\\n\\t\\tprint(\\"I recieved case 1!\\")\\n\\t\\treturn true\\n\\tend),\\n\\n\\tcase(2, function(value) --\x3e selected case\\n\\t\\tprint(\\"I recieved case 2!\\")\\n\\t\\treturn true\\n\\tend),\\n\\n\\tcase(function(value)\\n\\t\\tprint(\\"The value was nil :(\\")\\n\\t\\treturn true\\n\\tend),\\n}):Subscribe(function(returnedValue)\\n\\tprint(returnedValue) --\x3e true\\nend)\\n```","source":{"line":29,"path":"src/switch/src/Shared/switch.lua"}}')}}]);