[{"title":"RequestUtils","type":0,"sectionRef":"#","url":"/Evermore/api/RequestUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"RequestUtils","url":"/Evermore/api/RequestUtils#functions","content":" "},{"title":"promiseRequestWithRetries​","type":1,"pageTitle":"RequestUtils","url":"/Evermore/api/RequestUtils#promiseRequestWithRetries","content":"&lt;/&gt; RequestUtils.promiseRequestWithRetries( request: function, limit: number, buffer: number ) → () Safety make requests until a non-nil value is returned This can be useful for safely making HttpService calls, DataStoreService, etc "},{"title":"case","type":0,"sectionRef":"#","url":"/Evermore/api/case","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"case","url":"/Evermore/api/case#functions","content":" "},{"title":"case​","type":1,"pageTitle":"case","url":"/Evermore/api/case#case","content":"&lt;/&gt; case.case( ...: any, compute: function ) → ()  "},{"title":"PlayerAssetService","type":0,"sectionRef":"#","url":"/Evermore/api/PlayerAssetService","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"PlayerAssetService","url":"/Evermore/api/PlayerAssetService#functions","content":" "},{"title":"Init​","type":1,"pageTitle":"PlayerAssetService","url":"/Evermore/api/PlayerAssetService#Init","content":"&lt;/&gt; PlayerAssetService:Init(serviceBag: ServiceBag) → () Used to start the service. Intended to be used with ServiceBag "},{"title":"PlayerAssetServiceClient","type":0,"sectionRef":"#","url":"/Evermore/api/PlayerAssetServiceClient","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"PlayerAssetServiceClient","url":"/Evermore/api/PlayerAssetServiceClient#functions","content":" "},{"title":"Init​","type":1,"pageTitle":"PlayerAssetServiceClient","url":"/Evermore/api/PlayerAssetServiceClient#Init","content":"&lt;/&gt; PlayerAssetServiceClient:Init(serviceBag: ServiceBag) → () Starts the clientside, in charge of recieving/managing loaded player assets from PlayerAssetService. "},{"title":"UserInputServiceUtils","type":0,"sectionRef":"#","url":"/Evermore/api/UserInputServiceUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"UserInputServiceUtils","url":"/Evermore/api/UserInputServiceUtils#functions","content":" "},{"title":"observeLastInputType​","type":1,"pageTitle":"UserInputServiceUtils","url":"/Evermore/api/UserInputServiceUtils#observeLastInputType","content":"&lt;/&gt; UserInputServiceUtils.observeLastInputType() → Observable&lt;UserInputType &gt; Returns an observable with the last input type  "},{"title":"isKeyboardInput​","type":1,"pageTitle":"UserInputServiceUtils","url":"/Evermore/api/UserInputServiceUtils#isKeyboardInput","content":"&lt;/&gt; UserInputServiceUtils.isKeyboardInput(input: UserInputType ) → bool Checks if the provided input is from a keyboard  "},{"title":"isTouchInput​","type":1,"pageTitle":"UserInputServiceUtils","url":"/Evermore/api/UserInputServiceUtils#isTouchInput","content":"&lt;/&gt; UserInputServiceUtils.isTouchInput(input: UserInputType ) → bool Checks if the provided input is touch "},{"title":"switch","type":0,"sectionRef":"#","url":"/Evermore/api/switch","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"switch","url":"/Evermore/api/switch#functions","content":" "},{"title":"switch​","type":1,"pageTitle":"switch","url":"/Evermore/api/switch#switch","content":"&lt;/&gt; switch.switch( value: any, shouldYield: bool, ...: any ) → Observable  "},{"title":"PlayerAssetUtils","type":0,"sectionRef":"#","url":"/Evermore/api/PlayerAssetUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"PlayerAssetUtils","url":"/Evermore/api/PlayerAssetUtils#functions","content":" "},{"title":"getPlayerCatalogItems​","type":1,"pageTitle":"PlayerAssetUtils","url":"/Evermore/api/PlayerAssetUtils#getPlayerCatalogItems","content":"&lt;/&gt; PlayerAssetUtils.getPlayerCatalogItems(player: Player ) → catalogItemstable Gets all player's catalog items. Returns nil on failure.  "},{"title":"getPlaceGamepasses​","type":1,"pageTitle":"PlayerAssetUtils","url":"/Evermore/api/PlayerAssetUtils#getPlaceGamepasses","content":"&lt;/&gt; PlayerAssetUtils.getPlaceGamepasses(place: table) → gamepassestable Gets all gamepasses attributed to a place. Returns nil on failure.  "},{"title":"getPlayerGamepasses​","type":1,"pageTitle":"PlayerAssetUtils","url":"/Evermore/api/PlayerAssetUtils#getPlayerGamepasses","content":"&lt;/&gt; PlayerAssetUtils.getPlayerGamepasses(player: Player ) → gamepassestable Gets all player's gamepasses. Returns nil on failure.  "},{"title":"isAssetOwned​","type":1,"pageTitle":"PlayerAssetUtils","url":"/Evermore/api/PlayerAssetUtils#isAssetOwned","content":"&lt;/&gt; PlayerAssetUtils.isAssetOwned( player: Player , assetId: number, assetType: InfoType ) → () Checks if an asset is owned by the player (either gamepass or asset)  "},{"title":"promisePlayerCatalogItems​","type":1,"pageTitle":"PlayerAssetUtils","url":"/Evermore/api/PlayerAssetUtils#promisePlayerCatalogItems","content":"&lt;/&gt; PlayerAssetUtils.promisePlayerCatalogItems(player: Player ) → Promise&lt;catalogItems&gt; Promises the player's catalog items, with retries  "},{"title":"promisePlayerGamepasses​","type":1,"pageTitle":"PlayerAssetUtils","url":"/Evermore/api/PlayerAssetUtils#promisePlayerGamepasses","content":"&lt;/&gt; PlayerAssetUtils.promisePlayerGamepasses(player: Player ) → Promise&lt;gamepasses&gt; Promises the player's gamepasses, with retries  "},{"title":"promiseIsAssetOwned​","type":1,"pageTitle":"PlayerAssetUtils","url":"/Evermore/api/PlayerAssetUtils#promiseIsAssetOwned","content":"&lt;/&gt; PlayerAssetUtils.promiseIsAssetOwned( player: Player , assetId: number, assetType: InfoType ) → Promise&lt;isAssetOwned&gt; Promises if the player owns an asset, with retries "}]